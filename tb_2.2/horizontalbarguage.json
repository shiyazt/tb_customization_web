{
  "alias": "horizontal_bar_justgage",
  "name": "HorizontalBarGuage",
  "descriptor": {
    "type": "latest",
    "sizeX": 5,
    "sizeY": 3.5,
    "resources": [
      {
        "url": "https://cdnjs.cloudflare.com/ajax/libs/progressbar.js/1.1.0/progressbar.min.js"
      }
    ],
    "templateHtml": "<script src=\"https://kit.fontawesome.com/02c135ec17.js\" crossorigin=\"anonymous\"></script>\n\n<div class='card' ng-repeat=\"dataKeydata in data\">\n    <div class=\"icon-container\"\n    ng-style=\"{ 'color' : defaultColor }\">\n        <i class=\"fas fa-cubes icon\"></i> \n    </div>\n\n    <span class=\"value\"\n        ng-style=\"{ 'color' : defaultColor }\">{{dataKeydata.data[0] && dataKeydata.data[0][1] | number:decimel}} {{unit}}</span>\n    <span class=\"guageTitle\" \n        ng-show=\"showTitle\"\n        ng-style=\"{ 'color' : titleColor }\">{{ titleText }}</span>\n    <div class='guage-container'>\n        <div class=\"guage-outer\">\n            <span id='guage'\n            ng-style=\"{ 'background-color' : defaultColor, 'width' : calcPercentage(dataKeydata.data[0][1])}\"></span>\n        </div>\n    </div>\n    \n    <!--<canvas id=\"digitalGauge\" class='guagebar'></canvas>-->\n</div>\n\n",
    "templateCss": "#gauge {\n    text-align: center;\n    width: 50%;\n    background-color: #2196f3;\n   /* margin-left: -100px;\n    margin-right: -100px;*/\n    /*margin-top: -50px;*/\n    \n}\n\n.card {\n    display: flex;\n    padding: 10px 5px 10px 5px;\n    flex-direction: column;\n}\n\n.icon-container {\n    margin: 10px auto 10px auto;\n    /*border: 1px solid red;*/\n    text-align: center;\n    width: 100%;\n    color : #2196f3;\n}\n\n.icon-container .icon {\n    font-size: 50px;\n    /*color : #2196f3;*/\n}\n\n.guagebar {\n    border: 1px solid red;\n    width: 100%;\n}\n\n\n.card .guage-container {\n    /*border: 1px solid #1976d2;*/\n    border-radius: 10px;\n    height: 25px;\n    padding : 5px 8px 5px 8px;\n}\n\n.card .guage-container .guage-outer {\n    /*border: 1px solid green;*/\n    background-color: #555;\n    border-radius: 10px;\n    height: 100%;\n    width: 100%;\n    -webkit-box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n\t-moz-box-shadow   : inset 0 -1px 1px rgba(255,255,255,0.3);\n\tbox-shadow        : inset 0 -1px 1px rgba(255,255,255,0.3);\n    margin: 10px auto 10px auto;\n}\n\n\n.card .guage-container .guage-outer > span {\n    border-radius: 10px;\n    display: block;\n    background-color: #2196f3;\n    height: 100%;\n    width: 100%;\n}\n\n.card .guageTitle {\n    text-align: center;\n    font-size: 20px;\n    font-weight: 500;\n    text-transform: uppercase;\n}\n\n.card .value {\n    font-size: 32px;\n    font-family: Roboto;\n    font-weight: bold;\n    color : #2196f3;\n    text-align: center;\n}",
    "controllerScript": "self.onInit = function() {\n    var $scope = self.ctx.$scope;\n    $scope.unit = self.ctx.units ? self.ctx.units : '';\n    $scope.decimal = self.ctx.decimels ? self.ctx.decimels : 3;\n    self.ctx.$scope.data = self.ctx.defaultSubscription.data;\n    // console.log(self.ctx);\n    var settings = self.ctx.settings;\n    \n    $scope.showTitle = settings.showTitle;\n    $scope.maxValue = settings.maxvalue || 100;\n    $scope.titleText = settings.titleText ? settings.titleText : '';\n    $scope.defaultColor = settings.defaultColor || '#2196f3';\n    $scope.titleColor = settings.titleColor || '#2196f3';\n    \n    $scope.calcPercentage = function(value){\n        // console.log(Math.floor(value % $scope.maxValue)/($scope.maxValue) * 100);\n        // return (Math.floor(value % 100)/(100) * 100).toFixed(3) + '%';\n        if(parseInt(value) > 100){\n            return Math.floor((value / $scope.maxValue) * 100);\n        }else{\n            return Math.floor((value /100) * 100)\n        }\n        \n    } \n    \n    console.log(self.getSettingsSchema());\n\n}\n\nself.onDataUpdated = function() {\n    // self.ctx.gauge.update();\n}   \n\nself.onResize = function() {\n    // self.ctx.gauge.resize();\n}\n\nself.getSettingsSchema = function() {\n    // return TbCanvasDigitalGauge.settingsSchema;\n}\n\nself.typeParameters = function() {\n    return {\n        maxDatasources: 1,\n        maxDataKeys: 1\n    };\n}\n\nself.onMobileModeChanged = function() {\n    // self.ctx.gauge.mobileModeChanged();\n}\n\nself.onDestroy = function() {\n}\n\n",
    "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"maxValue\" : {\n                \"title\" : \"Maximum Value\",\n                \"type\" : \"number\",\n                \"default\" : 100\n            },\n            \"titleText\" : {\n              \"title\" : \"Guage Title\",\n              \"type\" : \"string\",\n              \"default\" : null\n            },\n            \"showTitle\" : {\n                \"title\" : \"Show Title\",\n                \"type\" : \"boolean\",\n                \"default\" : false\n            },\n            \"defaultIcon\": {\n                \"default\": \"done\",\n                \"type\": \"string\",\n                \"title\": \"Guage Icon\"\n            },\n            \"defaultColor\" : {\n                \"title\" : \"Guage Default Color\",\n                \"type\" : \"string\",\n                \"default\" : null\n            },\n            \"titleColor\" : {\n                \"title\" : \"Guage Title Color\",\n                \"type\" : \"string\",\n                \"default\" : null\n            }\n        }\n    },\n        \"form\": [\n            \"titleText\",\n            \"showTitle\",\n            \"defaultIcon\",\n            \"maxValue\",\n            {\n              \"key\" : \"defaultColor\",\n              \"type\" : \"color\"\n            },\n            {\n              \"key\" : \"titleColor\",\n              \"type\" : \"color\"\n            }\n\n        ]\n}",
    "dataKeySettingsSchema": "{}\n",
    "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Temp\",\"color\":\"#f44336\",\"settings\":{},\"_hash\":0.7282710489093589,\"funcBody\":\"var value = prevValue + Math.random() * 20 - 10;\\nif (value < 0) {\\n\\tvalue = 0;\\n} else if (value > 100) {\\n\\tvalue = 100;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"#000000\",\"color\":\"rgb(254, 253, 253)\",\"padding\":\"0px\",\"settings\":{\"defaultColor\":\"#4ad90c\",\"defaultIcon\":\"done\",\"maxValue\":100,\"titleText\":\"Packing Efficiency\",\"showTitle\":true,\"titleColor\":\"rgba(13, 161, 14, 0.85)\"},\"title\":\"HorizontalBarGuage\",\"dropShadow\":true,\"enableFullscreen\":false,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"enableDataExport\":false,\"widgetStyle\":{},\"useDashboardTimewindow\":true,\"showLegend\":false,\"actions\":{},\"units\":\"%\",\"decimals\":3}"
  }
}